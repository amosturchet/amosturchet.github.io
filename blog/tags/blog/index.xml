<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Blog on Amos Blog</title>
    <link>https://amosturchet.github.io/blog/tags/blog/</link>
    <description>Recent content in Blog on Amos Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 03 Sep 2025 11:52:38 +0200</lastBuildDate>
    <atom:link href="https://amosturchet.github.io/blog/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Blog setup and random thoughts</title>
      <link>https://amosturchet.github.io/blog/posts/005post-blog/</link>
      <pubDate>Wed, 03 Sep 2025 11:52:38 +0200</pubDate>
      <guid>https://amosturchet.github.io/blog/posts/005post-blog/</guid>
      <description>&lt;h2 id=&#34;setting-up-this-blog&#34;&gt;Setting Up This Blog&lt;/h2&gt;&#xA;&lt;p&gt;I finally decided to create a public blog to record some thoughts that I find useful to have documented and available online. This is mainly for personal use—helping me remember setups that worked or thought processes related to specific problems and solutions. I’m still undecided about whether to overlap this with my mathematical work, both for teaching and research. On one hand, the challenge of clearly expressing thoughts and ideas—even in brief posts—could be very beneficial. On the other hand, deciding what math-related content to publish and when can be more subtle. So, for now, I’ll focus on quick posts about computer and software setups.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="setting-up-this-blog">Setting Up This Blog</h2>
<p>I finally decided to create a public blog to record some thoughts that I find useful to have documented and available online. This is mainly for personal use—helping me remember setups that worked or thought processes related to specific problems and solutions. I’m still undecided about whether to overlap this with my mathematical work, both for teaching and research. On one hand, the challenge of clearly expressing thoughts and ideas—even in brief posts—could be very beneficial. On the other hand, deciding what math-related content to publish and when can be more subtle. So, for now, I’ll focus on quick posts about computer and software setups.</p>
<h2 id="hugo-and-static-websites">Hugo and Static Websites</h2>
<p>I consider myself an old-school HTML writer: I like choosing a theme and then directly tweaking and writing my HTML code. I worked with <a href="https://getbootstrap.com">Bootstrap</a> when responsive design became essential, managing my <a href="https://amosturchet.github.io">personal website</a>. This approach works well for small sites like personal pages or a few conference websites I’ve maintained. However, writing raw HTML can sometimes be tedious. Thanks to IDEs like <code>VSCode</code> and my (now up-to-date) <code>NeoVim</code> setup, the process has become much faster and smoother, with autocompletion and other language-server features drastically improving the workflow. Additionally, for local university servers or special setups, editing HTML directly is sometimes the only option.</p>
<p>Recently, I started exploring <a href="https://en.wikipedia.org/wiki/Static_site_generator">static site generators</a>. The idea of writing readable text with minimal Markdown syntax while having a program generate the website sounded very appealing. I was initially wary of the technical setup and worried it might be more time-consuming than my previous workflow, but I decided to give it a try on a couple of projects.</p>
<h3 id="advantages-and-the-joy-of-markdown">Advantages and the Joy of Markdown</h3>
<p>The initial setup was quite simple: install a static site generator locally—in my case, <a href="https://gohugo.io">Hugo</a>—via <code>homebrew</code>, then choose a theme from Hugo’s growing gallery (one can also create custom themes, but that’s a project for another time). For more details, the <a href="https://gohugo.io/getting-started/quick-start/">quick start guide</a> on Hugo’s website is very helpful.</p>
<p>To create your local folder for the website, just run:</p>





<pre tabindex="0"><code>hugo new site my-new-site
cd my-new-site
git init
git submodule add github-repo-of-the-theme themes/chosen_theme
echo &#34;theme = &#39;chosen_theme&#39;&#34; &gt;&gt; hugo.toml</code></pre><p>Most website settings are found in the <code>hugo.toml</code> file—a configuration file written in <a href="https://en.wikipedia.org/wiki/TOML">TOML</a>—which is readable and easy to modify for small changes. Once your config file is set up, you can add new content (e.g., blog posts) by running:</p>





<pre tabindex="0"><code>hugo new content content/posts/my-first-post.md</code></pre><p>This creates a basic Markdown file called <code>my-first-post.md</code> under the <code>content/posts/</code> folder. You then simply write in Markdown—a simple, well-formatted text format supporting basic code blocks—avoiding verbose HTML tags. It’s a very convenient way to create and edit content!</p>
<h3 id="preview-and-html-generation">Preview and HTML Generation</h3>
<p>This is great, but two important questions remain: how can you preview the HTML pages Hugo will generate? And how do you create the actual website files to upload and publish the site?</p>
<p>Hugo has straightforward answers for both.</p>
<p>To preview the website locally, run:</p>





<pre tabindex="0"><code>hugo server -D</code></pre><p>(from the root of your Hugo project). This starts Hugo’s development server, allowing you to view your site at <code>http://localhost:1313/blog/posts/</code> (in my setup). The page updates live whenever you save any relevant file. The <code>-D</code> flag tells Hugo to include drafts (new posts default to <code>draft: true</code> and are otherwise hidden).</p>
<p>Once your site is ready for publication, simply run:</p>





<pre tabindex="0"><code>hugo</code></pre><p>This command builds the entire static site into the <code>public</code> directory at the project root. The directory contains all generated HTML files, plus assets like images, CSS, and JavaScript. You can then upload this folder to your web server—easy and stress-free!</p>
<h3 id="some-final-thoughts">Some Final Thoughts</h3>
<p>This post demonstrated how to set up and run a static website with Hugo. For this blog, I’m using the <a href="https://github.com/clente/hugo-bearcub">Bear Cub Theme</a>, which is free and multilingual (leaving the door open for future posts in Italian). It’s simple, easy to set up, and straightforward to tweak (I’ve only made small adjustments, so I can’t speak to more extensive modifications). The theme is minimalistic—especially in the way I use it—but includes everything I was looking for in my first static blog. So far, I’m enjoying writing and editing my pages.</p>
<p>I’m back to work this week and still trying to establish a proper schedule. I’m not sure how that will affect my posting frequency here, but time will tell.</p>
<p>Got back to work this week, and I&rsquo;m still trying to fit in a proper working schedule. Not sure how this will affect the posting here but we&rsquo;ll see about that.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
